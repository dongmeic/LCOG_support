# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-12-15 22:21:51
"""
import arcpy
import os
from datetime import date
from sys import argv
import timeit

path = r"G:\projects\UtilityDistricts\eweb\DrinkingWater\EPA319_NPS_grant\ForestApplication\ODF_FACTS_DB\FERNS\FERNS_Model"
wrkspace = path + "\\FERNS_Workspace.gdb"
subfolderlist = [x[0] for x in os.walk(path)]
datapath = max([i for i in subfolderlist if "Ferns_Noaps_Polygons" in i], key=os.path.getmtime)
download_date = datapath.split("Ferns_Noaps_Polygons_")[1][0:8]
year = date.today().year
startYr = str(year)
endYr = str(year + 1)

def Model11(Input_Data=path + "\\FernsNoapsPolygon_downloads\\Ferns_Noaps_Polygons_"+ download_date +".gdb\\Ferns_Noaps_Polygons", 
            Expression_to_select_current_year_activities="ActType IN ('Changing Land Use to a non-forest use',\
                'Clearcut/Overstory Removal', \
                    'Clearing for Homesites/Other development', \
                        'Commercial Thinning/Selective Cutting', \
                            'Fertilizer Application', \
                                'Herbicide Application (Unit)', \
                                    'Salvage', \
                                        'Precommercial Thinning', \
                                            'Fungicide Application', \
                                                'Insecticide Application') And \
                                                    EndDate >= timestamp '{0}-01-01 00:00:00' And EndDate < timestamp '{1}-01-01 00:00:00'".format(startYr, endYr)):  # FERNS for AGO step 1

    arcpy.env.overwriteOutput = True

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\GeoAnalytics Desktop Tools.tbx")
    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
        McKenzie_Catchments_Input = path + "\\FERNS_Model_Input.gdb\\McKenzie_Catchments_Input"
        McKenzie_StatePlane = path + "\\FERNS_Model_Input.gdb\\McKenzie_Catchments_Input"

        # Process: Project (Project) (management)
        ReProjected_to_StatePlane = path + "\\FERNS_Model_Intermediate.gdb\\ReProjected"
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            arcpy.management.Project(in_dataset=Input_Data, 
                                    out_dataset=ReProjected_to_StatePlane, 
                                    out_coor_system="PROJCS[\"NAD_1983_HARN_StatePlane_Oregon_South_FIPS_3602_Feet_Intl\",\
                                        GEOGCS[\"GCS_North_American_1983_HARN\",\
                                            DATUM[\"D_North_American_1983_HARN\",\
                                                SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],\
                                                    PRIMEM[\"Greenwich\",0.0],\
                                                        UNIT[\"Degree\",0.0174532925199433]],\
                                                            PROJECTION[\"Lambert_Conformal_Conic\"],\
                                                                PARAMETER[\"False_Easting\",4921259.842519685],\
                                                                    PARAMETER[\"False_Northing\",0.0],\
                                                                        PARAMETER[\"Central_Meridian\",-120.5],\
                                                                            PARAMETER[\"Standard_Parallel_1\",42.33333333333334],\
                                                                                PARAMETER[\"Standard_Parallel_2\",44.0],\
                                                                                    PARAMETER[\"Latitude_Of_Origin\",41.66666666666666],\
                                                                                        UNIT[\"Foot\",0.3048]]", 
                                    transform_method=["NAD_1983_HARN_To_WGS_1984_2"], 
                                    in_coor_system="PROJCS[\"WGS_1984_Web_Mercator_Auxiliary_Sphere\",\
                                        GEOGCS[\"GCS_WGS_1984\",\
                                            DATUM[\"D_WGS_1984\",\
                                                SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],\
                                                    PRIMEM[\"Greenwich\",0.0],\
                                                        UNIT[\"Degree\",0.0174532925199433]],\
                                                            PROJECTION[\"Mercator_Auxiliary_Sphere\"],\
                                                                PARAMETER[\"False_Easting\",0.0],\
                                                                    PARAMETER[\"False_Northing\",0.0],\
                                                                        PARAMETER[\"Central_Meridian\",0.0],\
                                                                            PARAMETER[\"Standard_Parallel_1\",0.0],\
                                                                                PARAMETER[\"Auxiliary_Sphere_Type\",0.0],\
                                                                                    UNIT[\"Meter\",1.0]]", 
                                    preserve_shape="NO_PRESERVE_SHAPE",
                                    max_deviation="", 
                                    vertical="NO_VERTICAL")

        # Process: Select desired activity types for the year (Select Layer By Attribute) (management)
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            Ferns_activities_selection, Count_2_ = arcpy.management.SelectLayerByAttribute(in_layer_or_view=ReProjected_to_StatePlane, 
                                                                                            selection_type="NEW_SELECTION", 
                                                                                            where_clause=Expression_to_select_current_year_activities, 
                                                                                            invert_where_clause="NON_INVERT")

        # Process: Intersect (Intersect) (analysis)
        FERNS_Intersect_McKenzie = path + "\\FERNS_Model_Intermediate.gdb\\FERNS_Intersect_McKenzie"
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            arcpy.analysis.Intersect(in_features=[[McKenzie_StatePlane, ""], [Ferns_activities_selection, ""]], 
                                    out_feature_class=FERNS_Intersect_McKenzie, 
                                    join_attributes="ALL", 
                                    cluster_tolerance="", 
                                    output_type="INPUT")

        # Process: Add Field: YEAR (Calculate Field) (management)
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            Intersect_Layer_1_ = arcpy.management.CalculateField(in_table=FERNS_Intersect_McKenzie, 
                                                                field="YEAR", 
                                                                expression="Year($feature.EndDate)", 
                                                                expression_type="ARCADE", 
                                                                code_block="", 
                                                                field_type="TEXT", 
                                                                enforce_domains="NO_ENFORCE_DOMAINS")[0]

        # Process: Add Field: calc_acres (Add Field) (management)
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            Intersect_Layer_2_ = arcpy.management.AddField(in_table=Intersect_Layer_1_, 
                                                            field_name="calc_acres", 
                                                            field_type="DOUBLE", 
                                                            field_precision=None, 
                                                            field_scale=2, 
                                                            field_length=None, 
                                                            field_alias="", 
                                                            field_is_nullable="NULLABLE", 
                                                            field_is_required="NON_REQUIRED", 
                                                            field_domain="")[0]

        # Process: Calculate Field: calc_acres (Calculate Field) (management)
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            Intersect_Layer_3_ = arcpy.management.CalculateField(in_table=Intersect_Layer_2_, 
                                                                field="calc_acres", 
                                                                expression="$feature.Shape_area / 43560", 
                                                                expression_type="ARCADE", 
                                                                code_block="", 
                                                                field_type="TEXT", 
                                                                enforce_domains="NO_ENFORCE_DOMAINS")[0]

        # Process: Summary Statistics (Summary Statistics) (analysis)
        Summary_byCatchment_byActivity = path + "\\FERNS_Final_Products.gdb\\Summary_byCatchment_byActivity"
        arcpy.analysis.Statistics(in_table=Intersect_Layer_3_, 
                                    out_table=Summary_byCatchment_byActivity, 
                                    statistics_fields=[["calc_acres", "SUM"]], 
                                    case_field=["YEAR", "Basin_Name", "ActType"], 
                                    concatenation_separator="")

        # Process: Join Features (Join Features) (gapro)
        Output1 = path + "\\FERNS_Final_Products.gdb\\FERNSSummary_McKenzie_Joined"
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            arcpy.gapro.JoinFeatures(target_layer=McKenzie_Catchments_Input, 
                                    join_layer=Summary_byCatchment_byActivity, 
                                    output=Output1, 
                                    join_operation="JOIN_ONE_TO_MANY", 
                                    spatial_relationship="", 
                                    spatial_near_distance="", 
                                    temporal_relationship="", 
                                    temporal_near_distance="", 
                                    attribute_relationship=[["Basin_Name", "Basin_Name"]], 
                                    summary_fields=[], 
                                    join_condition="", 
                                    keep_all_target_features="")

        # Process: Delete Fields (Delete Field) (management)
        Output2 = arcpy.management.DeleteField(in_table=Output1, 
                                            drop_field=["OBJECTID", "join_OBJECTID", "join_Basin_Name"], 
                                            method="DELETE_FIELDS")[0]

        # Process: Add Field: calc_acres (2) (Add Field) (management)
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            Output3 = arcpy.management.AddField(in_table=Output2, 
                                                field_name="Activity_Acres_Percentage", 
                                                field_type="DOUBLE", 
                                                field_precision=None, 
                                                field_scale=1, 
                                                field_length=None, 
                                                field_alias="", 
                                                field_is_nullable="NULLABLE", 
                                                field_is_required="NON_REQUIRED", 
                                                field_domain="")[0]

        # Process: Calculate Field: calc_acres (2) (Calculate Field) (management)
        with arcpy.EnvManager(scratchWorkspace=wrkspace, workspace=wrkspace):
            Final_Output = arcpy.management.CalculateField(in_table=Output3, 
                                                        field="Activity_Acres_Percentage", 
                                                        expression="100*$feature.SUM_calc_acres/$feature.Subbasin_Acres", 
                                                        expression_type="ARCADE", 
                                                        code_block="", 
                                                        field_type="TEXT", 
                                                        enforce_domains="NO_ENFORCE_DOMAINS")[0]

if __name__ == '__main__':
    start = timeit.default_timer()
    Model11(*argv[1:])
    # print("tested")
    stop = timeit.default_timer()
    total_time = stop - start
    print(f'FERNS for AGO step 1 takes {total_time}')